{"version":3,"sources":["test.md","split-pane/Pane.js","split-pane/constants.js","split-pane/Separator.js","split-pane/Header.js","split-pane/Wrapper.js","split-pane/index.js","Markdown.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Pane","props","PaneContent","component","direction","num","size","state","title","map","style","width","w","height","h","className","val","css","VerticalBar","HorizontalBar","VerticalWrapper","HorizontalWrapper","Separator","onMouseDown","bar","wrapper","Header","DirectionIcon","Ver","Hor","Button","color","variant","onClick","toggleDirection","ButtonGroup","editorState","setEditorState","defaultProps","Wrapper","titles","useState","pos","setPos","setDirection","firstPaneSize","setFirstPaneSize","ref","useRef","onMouseUp","e","children","pane1","pane2","useEffect","onResize","onMouseMove","hOffset","document","documentElement","clientHeight","minW","clientWidth","maxW","minH","maxH","newSizeFirst","clientX","clientY","x","y","current","flexDirection","window","addEventListener","removeEventListener","SplitPane","console","log","panes","renderer","marked","Renderer","code","lang","escaped","this","options","highlight","langClass","setOptions","prismjs","languages","Viewer","id","dangerouslySetInnerHTML","md","breaks","Editor","value","onChange","onEditorChanged","Markdown","setMd","fetch","defaultMd","then","response","text","target","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.07fe72b6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/test.313b144a.md\";","/** @jsx jsx */\nimport {jsx} from '@emotion/core'\nimport css from '@emotion/css/macro'\n\nimport {VERTICAL, HORIZONTAL, BOTH, EDITOR, PREVIEW} from \"./constants\";\nimport PropTypes from \"prop-types\";\n\nexport function Pane(props) {\n    const {component: PaneContent, direction, num, size, state, title} = props;\n\n    const map = {};\n    map[VERTICAL] = ['left', 'right'];\n    map[HORIZONTAL] = ['top', 'bottom'];\n\n\n    const style = size ? {\n        width: direction === VERTICAL ? `${size.w}px` : null,\n        height: direction === HORIZONTAL ? `${size.h}px` : null,\n    } : {};\n\n    const Title = ({val}) => (\n        <div css={css` background: aqua; color: black;border-bottom: white 2px solid; padding: 5px; font-size: 0.6em`}>{val}</div>\n    )\n\n    return (\n        <div style={style}\n             className={`pane pane-${direction === VERTICAL ? 'col' : 'row'} pane-${map[direction][num - 1]} ${size && state === BOTH ? 'drag' : ''}`}>\n            {title && <Title val={title}/>}\n            <div className=\"pane-content\">{PaneContent}</div>\n\n        </div>);\n}\n\nPane.propTypes = {\n    component: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    direction: PropTypes.number.isRequired,\n    num: PropTypes.number.isRequired,\n    size: PropTypes.object,\n    state: PropTypes.oneOf([BOTH, EDITOR, PREVIEW]).isRequired,\n    title: PropTypes.string\n};\n","export const VERTICAL = 0x0;\nexport const HORIZONTAL = 0x1;\n\nexport const BOTH =0x2;\nexport const EDITOR =0x3;\nexport const PREVIEW =0x4;\n","/** @jsx jsx */\nimport {jsx} from '@emotion/core'\n\nimport css from \"@emotion/css/macro\";\nimport {VERTICAL} from \"./constants\";\nimport PropTypes from \"prop-types\";\n\nconst VerticalBar = css`\n                background-color: white;\n                width:   2px;\n                height:  100% ;\n                cursor:inherit ;\n`;\n\n\nconst HorizontalBar = css`\n                background-color: white;\n                height:   2px;\n                width:  100% ;\n                cursor:inherit ;\n             \n`;\n\nconst VerticalWrapper = css`\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                width:   10px;\n                height:  90vh ;\n                cursor:col-resize ;\n             \n`;\n\nconst HorizontalWrapper = css`\n                display: flex;\n                flex-direction: row;\n                align-items: center;\n                width:   100vw;\n                height:  10px;\n                \n                cursor:row-resize ;\n             \n`;\n\nexport function Separator(props) {\n    const {onMouseDown, direction} = props;\n\n    const bar = direction === VERTICAL ? VerticalBar : HorizontalBar,\n        wrapper = direction === VERTICAL ? VerticalWrapper : HorizontalWrapper;\n\n\n    return (\n        <div className=\"separator\" css={wrapper} onMouseDown={onMouseDown}>\n            <div css={bar}/>\n        </div>\n    )\n}\n\nSeparator.propTypes = {\n    onMouseDown: PropTypes.func.isRequired,\n    direction: PropTypes.number.isRequired\n};\n\n","/** @jsx jsx */\nimport {jsx} from '@emotion/core'\n\nimport css from \"@emotion/css/macro\";\nimport PropTypes from \"prop-types\";\nimport {\n    FormatListNumbered as EditorIcon,\n    Pageview as PreviewIcon,\n    ViewCompact as Both,\n    ViewDay as Hor,\n    ViewArray as Ver\n} from '@material-ui/icons'\nimport {Button, ButtonGroup} from '@material-ui/core'\nimport {BOTH, EDITOR, PREVIEW, VERTICAL} from \"./constants\";\n\nexport const Header = (props) => {\n\n    const DirectionIcon = props.direction === VERTICAL ? Ver : Hor;\n    return (\n        <div className={\"split-pane-header\"}\n             css={css`\n                        text-align: left; \n                        border-bottom: white solid 2px;\n                        width: 100%; \n                        margin: 0;\n                        height: 10vh;\n                        padding: 10px 50px 0 50px;\n             `}>\n            <span>Markdown Editor</span>\n\n\n            <Button color=\"primary\" variant=\"contained\" onClick={props.toggleDirection}><DirectionIcon/>\n            </Button>\n            <ButtonGroup color=\"primary\">\n                <Button variant={props.editorState === BOTH ? \"contained\" : null}\n                        onClick={() => props.setEditorState(BOTH)}\n                        css={css``}> <Both/>\n                </Button>\n                <Button variant={props.editorState === EDITOR ? \"contained\" : null}\n                        onClick={() => props.setEditorState(EDITOR)}\n                        css={css``}> <EditorIcon/>\n                </Button>\n                <Button variant={props.editorState === PREVIEW ? \"contained\" : null}\n                        onClick={() => props.setEditorState(PREVIEW)}\n                        css={css``}> <PreviewIcon/>\n                </Button>\n            </ButtonGroup>\n\n\n        </div>\n    )\n};\n\nHeader.propTypes = {\n    toggleDirection: PropTypes.func.isRequired,\n    direction: PropTypes.number.isRequired,\n    setEditorState: PropTypes.func.isRequired,\n    editorState: PropTypes.oneOf([BOTH, PREVIEW, EDITOR]).isRequired\n};\n\nHeader.defaultProps = {\n    editorState: BOTH\n};\n","/** @jsx jsx */\nimport {jsx} from '@emotion/core'\n\nimport css from \"@emotion/css/macro\";\nimport {useEffect, useRef, useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Pane} from \"./Pane\";\nimport {Separator} from \"./Separator\";\nimport {BOTH, EDITOR, HORIZONTAL, PREVIEW, VERTICAL} from \"./constants\";\nimport {Header} from \"./Header\";\n\nexport function Wrapper({titles, ...props}) {\n\n\n    const [pos, setPos] = useState(null);\n    const [direction, setDirection] = useState(props.direction);\n    const [editorState, setEditorState] = useState(BOTH);\n    const [firstPaneSize, setFirstPaneSize] = useState(null);\n\n    const ref = useRef(null);\n\n\n    const onMouseDown = (e) => {\n        setPos({x: e.clientX, y: e.clientY})\n    };\n\n    const onMouseUp = (e) => {\n        setPos(null)\n    };\n\n\n\n    const [pane1, pane2] = props.children;\n    const [pane1Title, pane2Title] = titles;\n    const toggleDirection = () => {\n        console.log(\"CHANGING DIRECTION\");\n        setDirection(direction === VERTICAL ? HORIZONTAL : VERTICAL);\n        setFirstPaneSize(null);\n        setPos(null)\n    };\n\n    const onStateChange = (state) =>{\n        setEditorState(state);\n        setFirstPaneSize(null);\n        setPos(null)\n    };\n\n\n\n    useEffect(() => {\n\n        const onResize = () => {\n            setFirstPaneSize(null);\n            setPos(null)\n        };\n\n        const onMouseMove = (e) => {\n            if (!pos) return;\n\n            const hOffset = document.documentElement.clientHeight * 10 / 100;\n            const minW = document.documentElement.clientWidth * 20 / 100;\n            const maxW = document.documentElement.clientWidth * 80 / 100;\n            const minH = document.documentElement.clientHeight * 28 / 100 ;\n            const maxH = document.documentElement.clientHeight * 62 / 100;\n\n            const newSizeFirst = direction === VERTICAL ?\n                {w: e.clientX, h: firstPaneSize.h}\n                : {w: firstPaneSize.w, h: e.clientY - hOffset};\n\n            newSizeFirst.w = newSizeFirst.w < minW ? minW : newSizeFirst.w > maxW ? maxW : newSizeFirst.w;\n            newSizeFirst.h = newSizeFirst.h < minH ? minH : newSizeFirst.h > maxH ? maxH : newSizeFirst.h;\n\n            setPos({x: e.clientX, y: e.clientY});\n\n            setFirstPaneSize(newSizeFirst)\n\n        };\n\n            if (!firstPaneSize)\n                setFirstPaneSize({\n                        w: document.documentElement.clientWidth / 2,\n                        h: document.documentElement.clientHeight * 4 / 10\n                    }\n                );\n\n            if (direction === VERTICAL) {\n                ref.current.style.flexDirection = \"row\"\n            } else {\n                ref.current.style.flexDirection = \"column\"\n\n            }\n\n            window.addEventListener('resize', onResize);\n            document.addEventListener(\"mousemove\", onMouseMove);\n            document.addEventListener(\"mouseup\", onMouseUp);\n\n\n            return () => {\n                document.removeEventListener(\"mousemove\", onMouseMove);\n                document.removeEventListener(\"mouseup\", onMouseUp);\n                window.removeEventListener('resize', onResize);\n\n            }\n\n        },[firstPaneSize, direction,pos]\n    )\n    ;\n\n    const SplitPane = css`    \n    width: 100%;\n    height: 90vh;\n    display: flex;`;\n    return (\n        <div {...props} className={`split-pane-wrapper ${pos ? 'disable-selection' : ''}`}>\n            <Header direction={direction}  toggleDirection={toggleDirection} setEditorState={onStateChange} editorState={editorState}/>\n            <div className={\"split-pane\"} ref={ref} css={SplitPane} >\n                {editorState !== PREVIEW &&  <Pane title={pane1.props.title} state={editorState} component={pane1} direction={direction} num={1} size={firstPaneSize}  />}\n                {editorState === BOTH &&  <Separator onMouseDown={onMouseDown} direction={direction} />}\n                {editorState !== EDITOR && <Pane  title={pane2.props.title} state={editorState} component={pane2} direction={direction} num={2}/> }\n            </div>\n        </div>\n    );\n}\n\n\nWrapper.propTypes = {\n    direction: PropTypes.oneOf([VERTICAL, HORIZONTAL]),\n    panes: PropTypes.array,\n    titles: PropTypes.array\n};\n\nWrapper.defaultProps = {\n    direction: VERTICAL,\n    panes: [],\n    titles: [],\n};\n\n\n","import {Wrapper as wrapper} from \"./Wrapper\";\nimport './style.css'\n\nexport default wrapper;\nexport const SplitPane = wrapper;\n\n\n\n","/** @jsx jsx */\nimport {jsx} from '@emotion/core'\nimport css from \"@emotion/css/macro\";\nimport {useEffect, useState} from \"react\";\nimport {SplitPane} from \"./split-pane\";\nimport marked from 'marked';\nimport prismjs from 'prismjs';\nimport 'prismjs/themes/prism-solarizedlight.css'\nimport defaultMd from './test.md'\n\nconst renderer = new marked.Renderer();\n\nrenderer.code = function (code, lang, escaped) {\n    code = this.options.highlight(code, lang);\n    if (!lang) {\n        return `<pre><code>${code}</code></pre>`;\n    }\n\n    const langClass = \"language-\" + lang;\n    return `<pre class=\"${langClass}\"><code class=\"${langClass}\">${code}</code></pre>`;\n};\n\nmarked.setOptions({\n    renderer,\n    highlight: function (code, lang) {\n        try {\n            const encoded = prismjs.highlight(code, prismjs.languages[lang], lang);\n            debugger;\n            return encoded\n        } catch {\n            return code;\n        }\n    }\n});\n\nconst Viewer = function (props) {\n    return (\n        <div id={'preview'} css={css`width: 100%; flex: 1; overflow: auto;align-items: flex-start;`}\n             dangerouslySetInnerHTML={{'__html': marked(props.md, {breaks: true})}}/>\n    );\n};\n\nconst Editor = function (props) {\n    return (\n        <textarea id={'editor'} value={props.md} onChange={props.onEditorChanged}\n                  css={css`width: 100%; flex: 1; resize:none`}/>\n    );\n};\n\nexport function Markdown() {\n\n    const [md, setMd] = useState('   ');\n\n    useEffect(() => {\n        if (md === '   ')\n            fetch(defaultMd).then(response => {\n                return response.text()\n            }).then(text => {\n                setMd(text)\n            })\n    });\n\n    function onEditorChanged(e) {\n        setMd(e.target.value);\n    }\n\n    return (\n        <SplitPane>\n            <Editor title={\"Markdown Editor\"} md={md} onEditorChanged={onEditorChanged}/>\n            <Viewer title={\"Preview\"} md={md}/>\n        </SplitPane>\n    )\n\n\n}\n","/** @jsx jsx */\nimport {jsx} from '@emotion/core'\nimport './App.css';\nimport {Markdown} from \"./Markdown\";\n\n\nfunction App() {\n\n    return (\n        <div className=\"App\">\n            <Markdown/>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}